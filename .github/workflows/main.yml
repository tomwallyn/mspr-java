name: Java CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build maven app

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

  run_tests:
    runs-on: ubuntu-latest
    name: Run test maven
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run tests with Maven
        run: mvn -Dtest=UnitTestHTMLFileCreator,UnitTestReaderJava test

  run:
    runs-on: ubuntu-latest
    name: Run maven app
    needs: [run_tests, build]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          mvn clean install
          mvn exec:java -D"exec.mainClass"="com.mspr.Main"
          ls "${{ env.GITHUB_WORKSPACE }}out/html"
          ls ${{ env.GITHUB_WORKSPACE }}
          mkdir -p path/to/artifact
          cp -a "${{ env.GITHUB_WORKSPACE }}out/." path/to/artifact/

      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: path/to/artifact/
  
  deploy-in-prod:
    name: Deploy in prod
    runs-on: ubuntu-latest
    needs: run
    steps:
    - uses: actions/checkout@v2

    - name: Clear Apache server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        envs: TEST
        script: |
          rm -f /var/www/html/html/*
          rm -f /var/www/html/css/*
          rm -f /var/www/html/img/*
          rm -f /var/www/html/api/*

    - uses: actions/download-artifact@v3
      with:
        name: my-artifact
        path: path/to/artifact
    
    - name: Display structure of downloaded files
      run: |
        ls html
      working-directory: path/to/artifact

    - name: Upload html file via SSH
      uses: garygrossgarten/github-action-scp@release
      with:
        local: out/html
        remote: /var/www/html/html
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}

    - name: Upload css file via SSH
      uses: garygrossgarten/github-action-scp@release
      with:
        local: out/css
        remote: /var/www/html/css
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}

    - name: Upload img file via SSH
      uses: garygrossgarten/github-action-scp@release
      with:
        local: out/img
        remote: /var/www/html/img
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}

    - name: Upload api file via SSH
      uses: garygrossgarten/github-action-scp@release
      with:
        local: out/api
        remote: /var/www/html/api
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}